#include <stdio.h>

#define MAX 100

int subsetSum(int set[], int n, int d, int subset[]) {
    int dp[MAX + 1][MAX + 1], i, j;

    for (i = 0; i <= n; i++)
        dp[i][0] = 1;
    for (j = 1; j <= d; j++)
        dp[0][j] = 0;

    for (i = 1; i <= n; i++) {
        for (j = 1; j <= d; j++) {
            if (set[i-1] > j)
                dp[i][j] = dp[i-1][j];
            else
                dp[i][j] = dp[i-1][j] || dp[i-1][j - set[i-1]];
        }
    }

    if (!dp[n][d])
        return 0;

    i = n; j = d; int k = 0;
    while (i > 0 && j > 0) {
        if (dp[i-1][j] == 0) {
            subset[k++] = set[i-1];
            j -= set[i-1];
        }
        i--;
    }
    return k;
}

int main() {
    int n, d, i, subset[MAX];

    printf("Enter number of elements: ");
    scanf("%d", &n);

    int set[MAX];
    printf("Enter the elements:\n");
    for (i = 0; i < n; i++)
        scanf("%d", &set[i]);

    printf("Enter the desired sum: ");
    scanf("%d", &d);

    int size = subsetSum(set, n, d, subset);

    if (size == 0)
        printf("No subset with given sum exists\n");
    else {
        printf("Subset with sum %d is: ", d);
        for (i = size - 1; i >= 0; i--)
            printf("%d ", subset[i]);
        printf("\n");
    }

    return 0;
}
