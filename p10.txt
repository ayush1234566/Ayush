#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void swap(int *a, int *b) {
    int t = *a; *a = *b; *b = t;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high], i = low - 1, j;
    for (j = low; j < high; j++) {
        if (arr[j] <= pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i+1], &arr[high]);
    return i + 1;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int sizes[] = {5000, 10000, 15000, 20000, 25000};
    int numTests = sizeof(sizes) / sizeof(sizes[0]);

    printf("n,time_in_seconds\n");

    for (int t = 0; t < numTests; t++) {
        int n = sizes[t];
        int *arr = (int*)malloc(n * sizeof(int));
        for (int i = 0; i < n; i++)
            arr[i] = rand();

        clock_t start = clock();
        quickSort(arr, 0, n - 1);
        clock_t end = clock();

        double time_taken = (double)(end - start) / CLOCKS_PER_SEC;
        printf("%d,%.6f\n", n, time_taken);

        free(arr);
    }

    return 0;
}
